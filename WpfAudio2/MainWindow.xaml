<Window x:Class="WpfAudio2.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfAudio2"
        xmlns:my="clr-namespace:System.ComponentModel;assembly=System"
        mc:Ignorable="d"
        Title="MainWindow" Height="486" Width="323" ResizeMode="NoResize" Closing="Window_Closing">
    <Window.Resources>

        <Image x:Key="PrevPressed" Source="icons/prev_pressed.png" Width="30"/>
        <Image x:Key="NextPressed" Source="icons/next_pressed.png" Width="30"/>
        <Image x:Key="Play" Source="icons/play.png" Width="30"/>
        <Image x:Key="Pause" Source="icons/pause.png" Width="30"/>
        <Image x:Key="Prev" Source="icons/prev.png" Width="30"/>
        <Image x:Key="Next" Source="icons/next.png" Width="30" IsHitTestVisible="True"/>
        <Image x:Key="Random" Source="icons/random.png" Width="40"/>
        <Image x:Key="RandomOn" Source="icons/random_on.png" Width="40"/>
        <Image x:Key="Repeat" Source="icons/repeat.png" Width="40"/>
        <Image x:Key="RepeatOn" Source="icons/repeat_on.png" Width="30"/>


        <Style TargetType="{x:Type ListBox}" x:Key="songs">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="Padding" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
                    <Setter Property="FontWeight" Value="DemiBold"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SliderRepeatButton" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border  BorderThickness="1" BorderBrush="GhostWhite" Background="White" Height="3"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderRepeatButton1" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border SnapsToDevicePixels="True" Background="Black"  BorderThickness="1" BorderBrush="Gray" Height="3"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumb" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Image Source="icons/round_pressed.png" Width="12"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="Slider"  TargetType="Slider">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Track Grid.Row="1" x:Name="PART_Track"   >
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton1}"  Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumb}"  />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </ControlTemplate>

        <Style x:Key="Horizontal_Slider" TargetType="Slider">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="MinHeight" Value="21" />
                    <Setter Property="MinWidth" Value="104" />
                    <Setter Property="Template" Value="{StaticResource Slider}" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style TargetType="{x:Type CheckBox}" x:Key="random">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <StackPanel Orientation="Horizontal">
                            <Image x:Name="checkboxImage" Source="icons/random.png" Width="32"/>
                            <ContentPresenter/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="checkboxImage" Property="Source" Value="icons/random_on.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type CheckBox}" x:Key="repeat">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <StackPanel Orientation="Horizontal">
                            <Image x:Name="checkboxImage" Source="icons/repeat.png" Width="32"/>
                            <ContentPresenter/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="checkboxImage" Property="Source" Value="icons/repeat_on.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>
    <Grid Margin="0,0,0,0" Background="LightGray">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0*"/>
            <ColumnDefinition Width="0*"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <TabControl x:Name="tabControl" Grid.ColumnSpan="3" HorizontalAlignment="Left" Height="460" Margin="0,0,-3,-3" VerticalAlignment="Top" Width="320" SelectionChanged="TabControl_SelectionChanged" RenderTransformOrigin="0.5,0.5" FontWeight="Light">
            <TabItem x:Name="TabSongs" Header="Songs" Width="70" Background="#FFE5E5E5"  BorderBrush="#FFACACAC" HorizontalAlignment="Left" Margin="30,0,-30,0" AllowDrop="True" FontWeight="DemiBold">
                <Grid Background="#FFE5E5E5" Margin="0,0,1,59">
                    <ListBox x:Name="listBoxSongs" IsEnabled="{Binding Path=EnabledFlagInViewModel, TargetNullValue=false}" Style="{StaticResource songs}" SelectionChanged="ListBoxSongs_SelectionChanged" MouseDoubleClick="ListBoxSongs_MouseDoubleClick" MouseRightButtonDown="ListBoxSongs_MouseRightButtonDown" ScrollViewer.PanningMode="VerticalOnly" SelectionMode="Extended" Drop="ListBoxSongs_Drop" RenderTransformOrigin="0.413,0.48" Margin="0,0,1,-2">
                        <ListBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem x:Name="goToAlbum" Header="Go to album" Click="goToAlbum_Click"/>
                                <MenuItem x:Name="addToPlaylist" Header="Add to playlist" Click="AddToPlaylist_Click">
                                </MenuItem>
                                <MenuItem x:Name="Delete" Header="Delete" Click="Delete_Click"/>
                            </ContextMenu>
                        </ListBox.ContextMenu>
                        <ListBox.Background>
                            <ImageBrush ImageSource="icons/back.jpg" Opacity="0.1" Stretch="UniformToFill"/>
                        </ListBox.Background>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Vertical" Margin="2" Width="267">
                                    <WrapPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Path=Title}" Width="225"/>
                                        <TextBlock Text="   "/>
                                        <TextBlock Text="{Binding Path=Duration}" FontWeight="Thin"  HorizontalAlignment="Right" TextAlignment="Right"/>
                                    </WrapPanel>
                                    <WrapPanel Orientation="Horizontal">
                                        <TextBlock VerticalAlignment="Center" Text="{Binding Path=Artist.Name}" FontSize="11" Opacity="0.8"/>
                                        <TextBlock Text=" - "/>
                                        <TextBlock VerticalAlignment="Center" Text="{Binding Path=Album.Title}" FontSize="11" Opacity="0.8" FontStyle="Italic"/>
                                    </WrapPanel>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </TabItem>
            <TabItem x:Name="TabAlbums" Header="Albums" Width="70" BorderBrush="#FFACACAC" Background="#FFE5E5E5" FontWeight="DemiBold" Margin="0,0,-30,-2" HorizontalAlignment="Right">
                <Grid Background="#FFE5E5E5" Margin="0,0,-4,67">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="21*"/>
                        <ColumnDefinition Width="89*"/>
                    </Grid.ColumnDefinitions>
                    <ListBox x:Name="listBoxAlbums" Style="{StaticResource songs}" ItemsSource="{Binding Path=data.Albums}" IsEnabled="{Binding Path=EnabledFlagInViewModel, TargetNullValue=false}" MouseDoubleClick="ListBoxAlbums_MouseDoubleClick" SelectionMode="Extended" Height="365" VerticalAlignment="Top" Grid.ColumnSpan="2" SelectionChanged="listBoxAlbums_SelectionChanged_1" Margin="2,0,0,0">
                        <ListBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem x:Name="addToPlaylistfromAlb" Header="Add to playlist" Click="AddToPlaylistfromAlb_Click"/>
                                <MenuItem x:Name="deleteAlbum" Header="Delete" Click="deleteAlbum_Click"/>
                            </ContextMenu>
                        </ListBox.ContextMenu>
                        <ListBox.Resources>
                            <DataTemplate DataType="{x:Type local:Song}">
                                <StackPanel Orientation="Vertical" Margin="2" Width="267">
                                    <WrapPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Path=Title}" Width="225"/>
                                        <TextBlock Text="   "/>
                                        <TextBlock Text="{Binding Path=Duration}" HorizontalAlignment="Right" TextAlignment="Right"/>
                                    </WrapPanel>
                                    <WrapPanel Orientation="Horizontal">
                                        <TextBlock VerticalAlignment="Center" Text="{Binding Path=Artist.Name}" FontSize="11" Opacity="0.8"/>
                                        <TextBlock Text=" - "/>
                                        <TextBlock VerticalAlignment="Center" Text="{Binding Path=Album.Title}" FontSize="11" Opacity="0.8" FontStyle="Italic"/>
                                    </WrapPanel>
                                </StackPanel>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type local:Album}">
                                <StackPanel Orientation="Vertical" Margin="2" Width="267">
                                    <TextBlock Text="{Binding Path=Title}" FontWeight="DemiBold"/>
                                    <TextBlock Text="{Binding Path=Artist.Name}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.Resources>
                        <ListBox.Background>
                            <ImageBrush ImageSource="icons/back.jpg" Opacity="0.1" Stretch="UniformToFill"/>
                        </ListBox.Background>
                    </ListBox>
                </Grid>
            </TabItem>
            <TabItem x:Name="TabPlaylists" Header="Playlists" Width="70" FontWeight="DemiBold" Margin="0,0,-30,-2" HorizontalAlignment="Right" Background="#FFE5E5E5"  BorderBrush="#FFACACAC">
                <Grid Background= "#FFE5E5E5" Margin="0,0,1,63">
                    <ListBox x:Name="listBoxPlaylists" Style="{StaticResource songs}" ItemsSource="{Binding Path=data.Playlists}" HorizontalAlignment="Left" Height="342" VerticalAlignment="Top" Width="312" Margin="0,30,0,-39" MouseDown="ListBoxPlaylists_MouseDown" MouseDoubleClick="ListBoxPlaylists_MouseDoubleClick">
                        <ListBox.Resources>
                            <DataTemplate DataType="{x:Type local:Song}">
                                <StackPanel Orientation="Vertical" Margin="2" Width="267">
                                    <WrapPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Path=Title}" Width="225"/>
                                        <TextBlock Text="   "/>
                                        <TextBlock Text="{Binding Path=Duration}" HorizontalAlignment="Right" TextAlignment="Right"/>
                                    </WrapPanel>
                                    <WrapPanel Orientation="Horizontal">
                                        <TextBlock VerticalAlignment="Center" Text="{Binding Path=Artist.Name}" FontSize="11" Opacity="0.8"/>
                                        <TextBlock Text=" - "/>
                                        <TextBlock VerticalAlignment="Center" Text="{Binding Path=Album.Title}" FontSize="11" Opacity="0.8" FontStyle="Italic"/>
                                    </WrapPanel>
                                </StackPanel>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type local:Playlist}">
                                <StackPanel Orientation="Vertical" Margin="2" Width="267">
                                    <TextBlock Text="{Binding Path=Title}"/>
                                    <TextBlock Text="{Binding Path=Count}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.Resources>
                        <ListBox.Background>
                            <ImageBrush ImageSource="icons/back.jpg" Opacity="0.1" Stretch="UniformToFill"/>
                        </ListBox.Background>
                    </ListBox>
                    <Button x:Name="buttonAddPlaylist" Content="+" HorizontalAlignment="Left" Margin="5,3,0,0" VerticalAlignment="Top" Width="30" Height="25" Click="ButtonAddPlaylist_Click">
                        <Button.Template>
                            <ControlTemplate>
                                <Image x:Name="plusImg" Source="icons/plus.png"></Image>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseDirectlyOver" Value="True">
                                        <Setter TargetName="plusImg" Property="Source" Value="icons/plus_pressed.png"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="buttonRemovePlaylist" Content="-" HorizontalAlignment="Left" Margin="40,5,0,0" VerticalAlignment="Top" Width="30" Height="20" Click="ButtonRemovePlaylist_Click">
                        <Button.Template>
                            <ControlTemplate>
                                <Image x:Name="minusImg" Source="icons/minus.png"></Image>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseDirectlyOver" Value="True">
                                        <Setter TargetName="minusImg" Property="Source" Value="icons/minus_pressed.png"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="buttonPlaylistSongRemove" Content="Remove" HorizontalAlignment="Left" Margin="245,5,0,0" VerticalAlignment="Top" Width="38" Height="20" Visibility="Visible" Click="ButtonPlaylistSongRemove_Click">
                        <Button.Template>
                            <ControlTemplate>
                                <Image x:Name="plusImg" Source="icons/minus.png"></Image>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseDirectlyOver" Value="True">
                                        <Setter TargetName="plusImg" Property="Source" Value="icons/minus_pressed.png"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </Grid>
            </TabItem>
            <TabItem x:Name="TabPlayer" Header="Player" AllowDrop="True" Drop="TabPlayer_Drop" FontWeight="DemiBold" Margin="30,0,-55,-2" RenderTransformOrigin="0.873,0.455" Background="#FFE5E5E5"  BorderBrush="#FFACACAC">
                <Grid Margin="0,0,1,70" x:Name="GridPlay">
                    <Border Visibility="Visible">
                        <Border.Effect>
                            <BlurEffect Radius="5" KernelType="Gaussian"/>
                        </Border.Effect>
                        <Image x:Name="blurBack" Width="410" Opacity="0.4" Stretch="UniformToFill" Margin="-58,0,-39,-73"/>
                    </Border>
                    <Border Height="237" Width="237" BorderThickness="0.4" BorderBrush="Black" Margin="32,25,44,100" >
                        <Image x:Name="tabPlayerPic" Opacity="1" Stretch="Uniform" Margin="2,2,2,2" VerticalAlignment="Top">
                        </Image>
                    </Border>

                    <TextBlock x:Name="textBlockSongTitle" HorizontalAlignment="Left" Height="20" Margin="7,285,0,0" TextWrapping="Wrap" Text="TextBlock" VerticalAlignment="Top" Width="275" FontSize="12" FontWeight="DemiBold"/>
                    <TextBlock x:Name="textBlockSongInfo" HorizontalAlignment="Left" Height="19" Margin="7,301,0,0" TextWrapping="Wrap" Text="TextBlock" VerticalAlignment="Top" Width="285" FontSize="12" FontWeight="Light" FontStyle="Italic"/>
                    <Slider x:Name="sliderPosition" Style="{StaticResource Horizontal_Slider}" Thumb.DragCompleted="SliderPosition_DragCompleted" ValueChanged="SliderPosition_ValueChanged" Height="28" Margin="12,345,21,-11" Minimum="0" Maximum="100" RenderTransformOrigin="0.495,1.607"/>

                    <TextBlock x:Name="textBlockCurrentPos" HorizontalAlignment="Left" Margin="7,329,0,0" TextWrapping="Wrap" Text="TextBlock" VerticalAlignment="Top" FontWeight="Thin" />
                    <TextBlock x:Name="textBlockDuration" HorizontalAlignment="Left" Margin="257,335,0,0" TextWrapping="Wrap" Text="TextBlock" VerticalAlignment="Top" RenderTransformOrigin="-0.012,0.062" FontWeight="Thin" Width="53"/>
                </Grid>
            </TabItem>
        </TabControl>
        <GroupBox x:Name="groupBoxButtons" Grid.ColumnSpan="3" Header="" Margin="0,395,0,-1" BorderThickness="0" HorizontalAlignment="Left" Width="315" Height="60" VerticalAlignment="Top">
            <StackPanel Orientation="Horizontal" Margin="-5,-18,-7,-12" Height="68" VerticalAlignment="Center">
                <CheckBox x:Name="checkRandom" Style="{StaticResource random}" HorizontalAlignment="Left" Margin="7,10,40,10" Width="73" VerticalAlignment="Center" Height="48"/>
                <Button x:Name="buttonPrev" Margin="-19,21,0,19" Click="ButtonPrev_Click" PreviewMouseDown="ButtonPrev_MouseDown" PreviewMouseUp="ButtonPrev_MouseUp" HorizontalAlignment="Center" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" Width="40">
                    <Button.Template>
                        <ControlTemplate>
                            <Image x:Name="prevImg" Source="icons/prev.png"></Image>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseDirectlyOver" Value="True">
                                    <Setter TargetName="prevImg" Property="Source" Value="icons/prev_pressed.png"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button x:Name="buttonPlayPause" HorizontalAlignment="Center" Click="ButtonPlayPause_Click" Margin="0,21,0,19" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" Width="40">
                    <DynamicResource ResourceKey="Play"></DynamicResource>
                </Button>
                <Button x:Name="buttonNext" Margin="0,21,54,19" Click="ButtonNext_Click" PreviewMouseDown="ButtonNext_MouseDown" PreviewMouseUp="ButtonNext_PreviewMouseUp" HorizontalAlignment="Center" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" Width="40">
                    <Button.Template>
                        <ControlTemplate>
                            <Image x:Name="nextImg" Source="icons/next.png"></Image>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseDirectlyOver" Value="True">
                                    <Setter TargetName="nextImg" Property="Source" Value="icons/next_pressed.png"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <CheckBox x:Name="checkRepeat" Style="{StaticResource repeat}" Width="32" Margin="-6,0,0,19" HorizontalAlignment="Right" Height="35" VerticalAlignment="Bottom"/>
            </StackPanel>
        </GroupBox>
        <Button x:Name="buttonAlbBack" Grid.ColumnSpan="3" Content="&lt;-" HorizontalAlignment="Left" Height="27" VerticalAlignment="Top" Width="74" Visibility="Hidden" Click="ButtonAlbBack_Click">
            <Button.Template>
                <ControlTemplate>
                    <Image x:Name="backImg" Source="icons/back.png"></Image>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseDirectlyOver" Value="True">
                            <Setter TargetName="backImg" Property="Source" Value="icons/back_pressed.png"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="buttonPlaylistBack" Content="&lt;-" HorizontalAlignment="Left" Height="25" VerticalAlignment="Top" Width="70" Visibility="Hidden" Click="ButtonPlaylistBack_Click_1" Grid.Column="2">
            <Button.Template>
                <ControlTemplate>
                    <Image x:Name="backImg" Source="icons/back.png"></Image>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseDirectlyOver" Value="True">
                            <Setter TargetName="backImg" Property="Source" Value="icons/back_pressed.png"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <ComboBox x:Name="comboBoxNetworks" HorizontalAlignment="Left" Height="25" Margin="285,35,0,0" VerticalAlignment="Top" Width="25" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" Visibility="Hidden" Grid.Column="2">
            <ComboBox.LayoutTransform>
                <RotateTransform Angle="270" />
            </ComboBox.LayoutTransform>
            <ComboBox.ItemContainerStyle>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="LayoutTransform">
                        <Setter.Value>
                            <RotateTransform Angle="90" />
                        </Setter.Value>
                    </Setter>
                </Style>
            </ComboBox.ItemContainerStyle>
            <ComboBoxItem x:Name="comboTwitter" Selected="ComboTwitter_Selected">
                <ComboBoxItem.Template>
                    <ControlTemplate>
                        <Image Name="twiImg" Source="icons/twitter.png" Width="25"></Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseDirectlyOver" Value="True">
                                <Setter TargetName="twiImg" Property="Source" Value="icons/twitter_pressed.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </ComboBoxItem.Template>
            </ComboBoxItem>
        </ComboBox>
        <WebBrowser x:Name="comboTwBrowser" Grid.ColumnSpan="3" Margin="0,0,317,0"/>
        <Menu x:Name="Menu" HorizontalAlignment="Left" Height="25" VerticalAlignment="Top" Width="30" Background="{x:Null}" Foreground="{x:Null}" Grid.Column="2">
            <MenuItem x:Name="Settings" IsEnabled="True" Height="25" Width="25" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}" Margin="0" RenderTransformOrigin="0.6,1.6">
                <MenuItem.Icon>
                    <Image Source="icons/menu.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="-5,-5,-9,-4" Width="30" Height="25"/>
                </MenuItem.Icon>
                <MenuItem x:Name="addFiles" Header="Add files..." Click="addFiles_Click"/>
                <MenuItem x:Name="exit" Header="Exit" Click="exit_Click"/>
            </MenuItem>
        </Menu>

    </Grid>
</Window>
